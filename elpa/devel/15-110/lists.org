#+TITLE: Lists in Python
#+DRAWERS: HINT
#+STARTUP: showall

* Introduction
- Lists are a collection of objects in Python
- Lists are contained between [ and ]
- Lists can be homogeneous like this:

#+BEGIN_SRC python
[1, 2, 3, 4]
#+END_SRC

or inhomogeneous like this:

#+BEGIN_SRC python
[1, 's', {'a': 5}, 5.6]
#+END_SRC

You can add two lists, which is the same as concatenating the lists. It is /not/ the same as adding the elements to each other.

#+BEGIN_SRC python
print [1,2,3] + ['a', 'b']
#+END_SRC


*************** Quiz
		:PROPERTIES:
		:CORRECT-ANSWER: b
		:NUM-CORRECT: 1
		:END:
What is the output of this code?
#+BEGIN_SRC python
[1, 2, 3] * 2
#+END_SRC

[[ans:a]]  [2, 4, 6]

[[ans:b]] [1, 2, 3, 1, 2, 3]

:HINT:
Lists do not do math.
:END:
*************** END

** Indexing a list

- You can set an element of a list

#+BEGIN_SRC python
a = [1, 2, 3]
a[1] = 'a'
print a
#+END_SRC

#+RESULTS:
: [1, 'a', 3]

*************** Concept question
		:PROPERTIES:
		:CORRECT-ANSWER: True
		:END:
A list is mutable.

 [[elisp:(if (string= "True" (org-entry-get (point) "CORRECT-ANSWER")) (play-sound-file "./sounds/99636__tomlija__small-crowd-yelling-yeah.wav" 0.91 nil))][True]]   [[elisp:(if (not (string= "False" (org-entry-get (point) "CORRECT-ANSWER"))) (play-sound-file "./sounds/fail-buzzer-01.wav" 0.91 nil))][False]]

:HINT:
Mutable means you can change the list
:END:
*************** END


** List comprehension

Python uses list comprehension to create lists. 

- The simplest syntax is:

  [statement for variable in iterable]

#+BEGIN_SRC python
print [2*i for i in [1, 2, 3, 'a']]
#+END_SRC

#+RESULTS:
: [2, 4, 6, 'aa']


- You can also put conditional statements

  [statement for variable in iterable if truth-statement]

Here we take two times each element if the element is a float or integer.
#+BEGIN_SRC python
print [2*i for i in [1, 2, 3, 'a'] if isinstance(i, (float, int))]
#+END_SRC

#+RESULTS:
: [2, 4, 6]

