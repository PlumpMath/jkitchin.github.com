<?xml version="1.0" encoding="UTF-8"?><abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>http://api.elsevier.com/content/abstract/scopus_id/84955094080</prism:url><dc:identifier>SCOPUS_ID:84955094080</dc:identifier><eid>2-s2.0-84955094080</eid><prism:doi>10.1007/0-387-32942-0_9</prism:doi><dc:title>Logic inference and a decomposition algorithm for the resource-constrained scheduling of testing tasks in the development of new pharmaceutical and agrochemical products</dc:title><prism:aggregationType>Book Series</prism:aggregationType><srctype>k</srctype><citedby-count>0</citedby-count><prism:publicationName>International Series in Operations Research and Management Science</prism:publicationName><dc:publisher>
Springer New York LLC
barbara.b.bertram@gsk.com
</dc:publisher><source-id>21100438182</source-id><prism:issn>08848289</prism:issn><prism:volume>88</prism:volume><prism:startingPage>265</prism:startingPage><prism:endingPage>289</prism:endingPage><prism:pageRange>265-289</prism:pageRange><prism:coverDate>2006-01-01</prism:coverDate><dc:creator><author auid="7004263098" seq="1"><ce:initials>C.T.</ce:initials><ce:indexed-name>Maravelias C.T.</ce:indexed-name><ce:surname>Maravelias</ce:surname><ce:given-name>Christos T.</ce:given-name><preferred-name>
<ce:initials>C.T.</ce:initials>
<ce:indexed-name>Maravelias C.</ce:indexed-name>
<ce:surname>Maravelias</ce:surname>
<ce:given-name>Christos T.</ce:given-name>
</preferred-name><author-url>http://api.elsevier.com/content/author/author_id/7004263098</author-url><affiliation href="http://api.elsevier.com/content/affiliation/affiliation_id/60027950" id="60027950"/></author></dc:creator><dc:description><abstract original="y" xml:lang="eng">
<publishercopyright>Â© 2006. Springer Science+Business Media, Inc.</publishercopyright>
<ce:para>In highly regulated industries, such as agrochemical and pharmaceutical, new products have to pass a number of regulatory tests related to safety, efficacy and environmental impact, to gain FDA approval. If a product fails one of these tests it cannot enter the market place and the investment in previous tests is wasted. Depending on the nature of the products, testing may last up to 10 years, and the scheduling of the tests should be made with the goal of minimizing the time to market and the cost of testing. Maravelias and Grossmann (2001) proposed a mixed-integer linear program (MILP) that considers a set of candidate products for which the cost, duration and probability of success of their tests is given, as well as the potential income if the products are successfully launched. Furthermore, there are limited resources in terms of laboratories and number of technicians. If needed, a test may be outsourced at a higher cost. The major decisions in the model are: (i) the decision to perform in-house or outsource a testing task, (ii) the assignment of resources to testing tasks, and (iii) the sequencing and timing of tests. The objective is to maximize the net present value of multiple projects. The mixed-integer linear program can become very expensive for solving real world problems (2-10 products and 50-200 tests). In order to improve the linear programming relaxation, we propose the use of logic cuts that are derived from implied precedences that arise in the graphs of the corresponding schedules. The solution of a single large-scale problem is avoided with a heuristic decomposition algorithm that relies on solving a reduced MILP model that embeds the optimal schedules obtained for the individual products. It is shown that a tight upper bound can be easily determined for this decomposition algorithm. On a set of test problems the proposed algorithm is shown to be one to two orders of magnitude faster than the full space method, yielding solutions that are optimal or near optimal.</ce:para>
</abstract></dc:description><link href="http://api.elsevier.com/content/abstract/scopus_id/84955094080" rel="self"/><link href="http://www.scopus.com/inward/record.url?partnerID=HzOxMe3b&amp;scp=84955094080&amp;origin=inward" rel="scopus"/></coredata><affiliation href="http://api.elsevier.com/content/affiliation/affiliation_id/60027950" id="60027950"><affilname>Carnegie Mellon University</affilname><affiliation-city>Pittsburgh</affiliation-city><affiliation-country>United States</affiliation-country></affiliation><authors><author auid="7004263098" seq="1"><ce:initials>C.T.</ce:initials><ce:indexed-name>Maravelias C.T.</ce:indexed-name><ce:surname>Maravelias</ce:surname><ce:given-name>Christos T.</ce:given-name><preferred-name>
<ce:initials>C.T.</ce:initials>
<ce:indexed-name>Maravelias C.</ce:indexed-name>
<ce:surname>Maravelias</ce:surname>
<ce:given-name>Christos T.</ce:given-name>
</preferred-name><author-url>http://api.elsevier.com/content/author/author_id/7004263098</author-url><affiliation href="http://api.elsevier.com/content/affiliation/affiliation_id/60027950" id="60027950"/></author><author auid="7102750465" seq="2"><ce:initials>I.E.</ce:initials><ce:indexed-name>Grossmann I.E.</ce:indexed-name><ce:surname>Grossmann</ce:surname><ce:given-name>Ignacio E.</ce:given-name><preferred-name>
<ce:initials>I.E.</ce:initials>
<ce:indexed-name>Grossmann I.</ce:indexed-name>
<ce:surname>Grossmann</ce:surname>
<ce:given-name>Ignacio E.</ce:given-name>
</preferred-name><author-url>http://api.elsevier.com/content/author/author_id/7102750465</author-url><affiliation href="http://api.elsevier.com/content/affiliation/affiliation_id/60027950" id="60027950"/></author></authors></abstracts-retrieval-response>
