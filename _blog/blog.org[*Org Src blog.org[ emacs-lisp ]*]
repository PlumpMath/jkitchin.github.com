(defun org-image-data-uri (path)
  (let ((data (with-temp-buffer (insert-file-contents path) (buffer-string))))
    (concat "<img src=\"" 
            "data:image/png;charset=utf-8;base64,"
	    (base64-encode-string (encode-coding-string data 'binary) t)
	    "\"/>")))

(defun my-link (link contents info)
  (let ((type (org-element-property :type link))
	(path (org-element-property :path link)))
    (if (and (string= type "file")
	     (f-ext? path "png"))
	(org-image-data-uri path)
      (org-html-link link contents info))))

(org-export-define-derived-backend 'my-html 'html
  :translate-alist '((link . my-link)))


