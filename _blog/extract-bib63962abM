* An exporter for org to docx via pandoc

The idea here is to write a function that converts your org document to a word document using pandoc. There is not much we need to do, but we would like to convert citations to the format used by pandoc.

#+BEGIN_SRC emacs-lisp
(defun pandoc-cite-format (link contents info)
  (let ((type (org-element-property :type link))
	(path (org-element-property :path link)))
    (cond
     ((string= type "cite")
      (format "[%s]"
	      (mapconcat
	       (lambda (x) (concat "@" x))
	       (split-string path ",")
	       "; ")
	      ))
     ;; anything else, we just do the regular thing
     (t
      (org-html-link link contents info)))))

(org-export-define-derived-backend 'pandoc-docx 'org
  :translate-alist '((link . pandoc-cite-format)))
#+END_SRC

#+RESULTS:
: [cl-struct-org-export-backend pandoc-docx org ((link . pandoc-cite-format)) nil nil nil nil]

Here are some references to test cite:needs-1989-calcul. And a multiple reference.

cite:jarvi-2008-devel-reaxf,zhou-2004-first-lda-u,curnan-2014-effec-concen

This will export our file with converted links.
#+BEGIN_SRC emacs-lisp
(org-export-to-file 'pandoc-docx "some-filename.org")
#+END_SRC(defun my-link-format (link contents info)

Now the pandoc command looks like:
#+BEGIN_SRC sh
pandoc -s -S --biblio=../../Dropbox/bibliography/references.bib org-to-word.org -o org-to-word.docx
#+END_SRC

So, we need to get the bibliography file from the org file.

(expand-file-name (car (org-ref-find-bibliography)))

#+BEGIN_SRC emacs-lisp
(shell-command "rm some-filename.docx")
(find-file (org-export-to-file 'pandoc-docx "some-filename.org"))
(shell-command (format "pandoc -s -S --biblio=%s %s -o %s"
(expand-file-name (car (org-ref-find-bibliography)))
(buffer-file-name)
(replace-regexp-in-string "\\.org" ".docx" (buffer-file-name))))
(shell-command (format "open %s" (replace-regexp-in-string "\\.org" ".docx" (buffer-file-name))))
#+END_SRC

#+RESULTS:
: 1

[[./some-filename.docx]]
bibliography: