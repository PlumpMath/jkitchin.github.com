* An exporter for org to docx via pandoc

The idea here is to write a function that converts your org document to a word document using pandoc. There is not much we need to do, but we would like to convert citations to the format used by pandoc.

** Citation format in pandoc
See [[http://johnmacfarlane.net/pandoc/README.html][Pandoc - Pandoc Userâ€™s Guide]] for directions on citations.

** Getting citations in docx with pandoc

First, we redefine our format function. This is an experiment, so I will only do it for a cite link here.

#+BEGIN_SRC emacs-lisp
(defun org-ref-format-cite (keyword desc format)
(message-box "%s" keyword)
(cond
(desc  ;; pre and or post text
"pre/post text"
)
(t
(format "[%s]"
	      (mapconcat
	       (lambda (x) (concat "@" x))
	       (split-string path ",")
	       "; ")))))

(org-export-define-derived-backend 'pandoc-docx 'org)
(org-export-to-file 'pandoc-docx "some-filename.org")
#+END_SRC


Here are some references to test [[cite:needs-1989-calcul]]. And a multiple reference [[cite:jarvi-2008-devel-reaxf,zhou-2004-first-lda-u,curnan-2014-effec-concen]]. Next, a link with pre text [[cite:curnan-2014-effec-concen][for example, ]] and, one with pre and post text [[cite:zhou-2004-first-lda-u][pre text::post text]].







** Idea for org-ref
Make a custom backend with a special function for citations.
#+BEGIN_SRC emacs-lisp
(defun pandoc-cite-format (link contents info)
  (let ((type (org-element-property :type link))
	(path (org-element-property :path link)))
    (cond
     ((string= type "cite")
      (format "[%s]"
	      (mapconcat
	       (lambda (x) (concat "@" x))
	       (split-string path ",")
	       "; ")
      (t
(message-box "%s
%s"link contents))
	      )))))

(org-export-define-derived-backend 'pandoc-docx 'org
  :translate-alist '((link . pandoc-cite-format)))
#+END_SRC


Here are some references to test [[cite:needs-1989-calcul]]. And a multiple reference [[cite:jarvi-2008-devel-reaxf,zhou-2004-first-lda-u,curnan-2014-effec-concen]]. Next, a link with pre text [[cite:curnan-2014-effec-concen][for example, ]] and, one with pre and post text [[cite:zhou-2004-first-lda-u][pre text::post text]].

This will export our file with converted links.
#+BEGIN_SRC emacs-lisp
(org-export-to-file 'pandoc-docx "some-filename.org")
#+END_SRC

So, we need to get the bibliography file from the org file.

(expand-file-name (car (org-ref-find-bibliography)))

#+BEGIN_SRC emacs-lisp
(shell-command "rm some-filename.docx")
(find-file (org-export-to-file 'pandoc-docx "some-filename.org"))
(shell-command (format "pandoc -s -S --biblio=%s %s -o %s"
		       (expand-file-name (car (org-ref-find-bibliography)))
		       (buffer-file-name)
		       (replace-regexp-in-string "\\.org" ".docx" (buffer-file-name))))
(shell-command (format "open %s" (replace-regexp-in-string "\\.org" ".docx" (buffer-file-name))))
#+END_SRC

#+RESULTS:
: 1

[[./some-filename.docx]]

[[bibliography:org-to-docx-export.bib]]
