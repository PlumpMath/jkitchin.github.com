#+LATEX_CLASS: article
* Command line export of a section in an org-file

#+BEGIN_SRC emacs-lisp :tangle export-org-section :shebang #!/bin/sh
":"; exec emacs -l ~/Dropbox/kitchingroup/jmax/init.el --script "$0" "$@" # -*- mode: emacs-lisp; lexical-binding: t; -*-

;; usage: export-org-section section-id org-file

;; this removes my -l init.el options
(pop command-line-args-left)
(pop command-line-args-left)

;; now goto, narrow and export the section
(let ((section-id (pop command-line-args-left))
      (org-file (pop command-line-args-left)))
  (find-file (expand-file-name org-file))
  (org-open-link-from-string (format "[[#%s]]" section-id))
(print (point))
 ; (org-narrow-to-subtree)
 ; (org-latex-export-to-pdf nil t)
)
#+END_SRC


#+BEGIN_SRC sh
./export-org-section sec-1 cmd-line-section-export.org
#+END_SRC

#+RESULTS:
:
: 654

[[./

file:cmd-line-section-export.pdf

#+RESULTS:

** Test section 1
   :PROPERTIES:
   :CUSTOM_ID: sec-1
   :END:

Some words and an equation \(e^x-1=0\).


** Test section 2
   :PROPERTIES:
   :CUSTOM_ID: sec-2
   :END:

Some words and a table:

| a | b |
|---+---|
| 9 | 8 |
| 8 | 8 |


#+BEGIN_SRC emacs-lisp :tangle test2 :shebang #!/bin/sh
#!/bin/sh
":"; exec emacs --script "$0" "$@" # -*- mode: emacs-lisp; lexical-binding: t; -*-
(defun main ()
  (print (version))
  (print (format "I did it. you passed in %s" command-line-args-left)))

(main)
;; Local Variables:
;; mode: emacs-lisp
;; End:
#+END_SRC


#+BEGIN_SRC sh
./test2 arg1 arg2 arg3
#+END_SRC
#+RESULTS:
:
: "GNU Emacs 25.0.50.1 (x86_64-apple-darwin13.4.0, NS appkit-1265.21 Version 10.9.5 (Build 13F34))
:  of 2015-01-18 on vpn-128-237-146-193.library.vpn.cmu.edu"
:
: "I did it. you passed in (arg1 arg2 arg3)"
