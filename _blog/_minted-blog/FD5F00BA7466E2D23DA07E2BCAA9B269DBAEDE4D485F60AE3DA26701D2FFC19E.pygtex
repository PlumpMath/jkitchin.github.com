\begin{Verbatim}[commandchars=\\\{\}]
\PYG{p}{(}\PYG{n+nb}{defvar} \PYG{n+nv}{mongo\PYGZhy{}comint\PYGZhy{}output} \PYG{n+no}{nil} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{)}

\PYG{p}{(}\PYG{n+nb}{defun} \PYG{n+nv}{mongo\PYGZhy{}comint\PYGZhy{}output\PYGZhy{}filter} \PYG{p}{(}\PYG{n+nv}{txt}\PYG{p}{)}
  \PYG{p}{(}\PYG{n+nv}{message} \PYG{l+s}{\PYGZdq{}test\PYGZdq{}}\PYG{p}{)}
  \PYG{p}{(}\PYG{k}{setq} \PYG{n+nv}{mongo\PYGZhy{}comint\PYGZhy{}output} \PYG{n+nv}{txt}\PYG{p}{))}
\PYG{p}{(}\PYG{k}{setq} \PYG{n+nv}{comint\PYGZhy{}output\PYGZhy{}filter\PYGZhy{}functions} \PYG{o}{\PYGZsq{}}\PYG{p}{())}
\PYG{p}{(}\PYG{n+nv}{add\PYGZhy{}hook} \PYG{l+s+ss}{\PYGZsq{}comint\PYGZhy{}output\PYGZhy{}filter\PYGZhy{}functions}
	  \PYG{l+s+ss}{\PYGZsq{}mongo\PYGZhy{}comint\PYGZhy{}output\PYGZhy{}filter}\PYG{p}{)}

\PYG{p}{(}\PYG{n+nv}{add\PYGZhy{}hook} \PYG{l+s+ss}{\PYGZsq{}comint\PYGZhy{}output\PYGZhy{}filter\PYGZhy{}functions}
          \PYG{o}{\PYGZsq{}}\PYG{p}{(}\PYG{k}{lambda} \PYG{p}{(}\PYG{n+nv}{txt}\PYG{p}{)} \PYG{p}{(}\PYG{n+nv}{message} \PYG{p}{(}\PYG{n+nb}{format}  \PYG{l+s}{\PYGZdq{} output \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} \PYGZpc{}c\PYGZpc{}s\PYGZdq{}} \PYG{l+m+mi}{10} \PYG{n+nv}{txt}\PYG{p}{))))}

\PYG{p}{(}\PYG{n+nv}{comint\PYGZhy{}send\PYGZhy{}string} \PYG{p}{(}\PYG{n+nv}{get\PYGZhy{}buffer\PYGZhy{}process} \PYG{l+s}{\PYGZdq{}*Mongo*\PYGZdq{}}\PYG{p}{)} \PYG{l+s}{\PYGZdq{}use bibtex\PYGZbs{}n\PYGZdq{}}\PYG{p}{)}
\PYG{p}{(}\PYG{n+nv}{comint\PYGZhy{}send\PYGZhy{}string} \PYG{p}{(}\PYG{n+nv}{get\PYGZhy{}buffer\PYGZhy{}process} \PYG{l+s}{\PYGZdq{}*Mongo*\PYGZdq{}}\PYG{p}{)} \PYG{l+s}{\PYGZdq{}db.dropDatabase()\PYGZbs{}n\PYGZdq{}}\PYG{p}{)}
\PYG{p}{(}\PYG{n+nv}{comint\PYGZhy{}send\PYGZhy{}string} \PYG{p}{(}\PYG{n+nv}{get\PYGZhy{}buffer\PYGZhy{}process} \PYG{l+s}{\PYGZdq{}*Mongo*\PYGZdq{}}\PYG{p}{)} \PYG{l+s}{\PYGZdq{}show dbs\PYGZbs{}n\PYGZdq{}}\PYG{p}{)}
\PYG{n+nv}{mongo\PYGZhy{}comint\PYGZhy{}output}
\end{Verbatim}
