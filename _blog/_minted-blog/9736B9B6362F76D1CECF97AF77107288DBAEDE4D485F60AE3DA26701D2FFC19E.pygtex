\begin{Verbatim}[commandchars=\\\{\}]
\PYG{p}{(}\PYG{k}{let} \PYG{p}{((}\PYG{n+nv}{temp} \PYG{p}{(}\PYG{n+nv}{make\PYGZhy{}temp\PYGZhy{}file} \PYG{l+s}{\PYGZdq{}mongo\PYGZhy{}\PYGZdq{}} \PYG{n+no}{nil} \PYG{l+s}{\PYGZdq{}.js\PYGZdq{}}\PYG{p}{)))}
  \PYG{p}{(}\PYG{n+nv}{with\PYGZhy{}temp\PYGZhy{}file} \PYG{n+nv}{temp}
    \PYG{p}{(}\PYG{n+nv}{insert} \PYG{p}{(}\PYG{n+nb}{format} \PYG{l+s}{\PYGZdq{}db.contacts.insert(\PYGZpc{}s)\PYGZdq{}}
		    \PYG{p}{(}\PYG{k}{let*} \PYG{p}{((}\PYG{n+nv}{data} \PYG{p}{(}\PYG{n+nb}{loop} \PYG{n+nv}{for} \PYG{n+nv}{contact} \PYG{n+nv}{in} \PYG{n+nv}{contacts}
				       \PYG{n+nv}{collect}
				       \PYG{p}{(}\PYG{n+nb}{append} \PYG{o}{`}\PYG{p}{((}\PYG{n+nv}{desc} \PYG{o}{.} \PYG{o}{,}\PYG{p}{(}\PYG{n+nb}{car} \PYG{n+nv}{contact}\PYG{p}{))))))}
			   \PYG{p}{(}\PYG{n+nv}{json} \PYG{p}{(}\PYG{n+nv}{json\PYGZhy{}encode} \PYG{n+nv}{data}\PYG{p}{))}
			   \PYG{p}{(}\PYG{n+nv}{json} \PYG{p}{(}\PYG{n+nv}{replace\PYGZhy{}regexp\PYGZhy{}in\PYGZhy{}string} \PYG{l+s}{\PYGZdq{}[\PYGZca{}[:ascii:]]\PYGZdq{}} \PYG{l+s}{\PYGZdq{}\PYGZhy{}\PYGZdq{}} \PYG{n+nv}{json}\PYG{p}{)))}
		      \PYG{n+nv}{json}\PYG{p}{))))}
  \PYG{p}{(}\PYG{n+nv}{comint\PYGZhy{}simple\PYGZhy{}send}
   \PYG{p}{(}\PYG{n+nv}{get\PYGZhy{}buffer\PYGZhy{}process} \PYG{l+s}{\PYGZdq{}*Mongo*\PYGZdq{}}\PYG{p}{)}
   \PYG{p}{(}\PYG{n+nb}{format} \PYG{l+s}{\PYGZdq{}load(\PYGZbs{}\PYGZdq{}\PYGZpc{}s\PYGZbs{}\PYGZdq{})\PYGZdq{}} \PYG{n+nv}{temp}\PYG{p}{)))}
\end{Verbatim}
