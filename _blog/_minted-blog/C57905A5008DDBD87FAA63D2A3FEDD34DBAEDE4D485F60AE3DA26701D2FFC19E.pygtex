\begin{Verbatim}[commandchars=\\\{\}]
\PYG{p}{(}\PYG{n+nb}{defun} \PYG{n+nv}{mongo\PYGZhy{}deleteMany} \PYG{p}{(}\PYG{n+nv}{db} \PYG{n+nv}{collection} \PYG{n+nv}{filter}\PYG{p}{)}
  \PYG{l+s}{\PYGZdq{}Delete records in DB.COLLECTION matched by FILTER.}
\PYG{l+s}{TODO: add write concern.\PYGZdq{}}
  \PYG{p}{(}\PYG{k}{let*} \PYG{p}{((}\PYG{n+nv}{filter\PYGZhy{}json} \PYG{p}{(}\PYG{n+nv}{mongo\PYGZhy{}encode\PYGZhy{}query} \PYG{n+nv}{filter}\PYG{p}{))}
	 \PYG{p}{(}\PYG{n+nv}{cmd} \PYG{p}{(}\PYG{n+nb}{format} \PYG{l+s}{\PYGZdq{}mongo \PYGZpc{}s \PYGZhy{}\PYGZhy{}quiet \PYGZhy{}\PYGZhy{}eval \PYGZsq{}db.\PYGZpc{}s.deleteMany(\PYGZpc{}s)\PYGZsq{}\PYGZdq{}}
		      \PYG{n+nv}{db} \PYG{n+nv}{collection}
		      \PYG{n+nv}{filter\PYGZhy{}json}\PYG{p}{))}
	 \PYG{p}{(}\PYG{n+nv}{output} \PYG{p}{(}\PYG{n+nv}{shell\PYGZhy{}command\PYGZhy{}to\PYGZhy{}string} \PYG{n+nv}{cmd}\PYG{p}{)))}
    \PYG{p}{(}\PYG{n+nv}{json\PYGZhy{}read\PYGZhy{}from\PYGZhy{}string} \PYG{n+nv}{output}\PYG{p}{)))}
\end{Verbatim}
