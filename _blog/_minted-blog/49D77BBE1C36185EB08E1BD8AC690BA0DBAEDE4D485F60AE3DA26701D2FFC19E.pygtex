\begin{Verbatim}[commandchars=\\\{\}]
\PYG{p}{(}\PYG{n+nb}{defun} \PYG{n+nv}{mongo\PYGZhy{}insert} \PYG{p}{(}\PYG{n+nv}{db} \PYG{n+nv}{collection} \PYG{n+nv}{document}\PYG{p}{)}
  \PYG{l+s}{\PYGZdq{}Insert into DB.COLLECTION the DOCUMENT.}
\PYG{l+s}{DOCUMENT will be some lisp structure that is converted to json.\PYGZdq{}}
  \PYG{c+c1}{;; we have to escape quote any single quotes. This came from}
  \PYG{c+c1}{;; http://stackoverflow.com/questions/1250079/how\PYGZhy{}to\PYGZhy{}escape\PYGZhy{}single\PYGZhy{}quotes\PYGZhy{}within\PYGZhy{}single\PYGZhy{}quoted\PYGZhy{}strings}
  \PYG{p}{(}\PYG{k}{let*} \PYG{p}{((}\PYG{n+nv}{json} \PYG{p}{(}\PYG{n+nv}{replace\PYGZhy{}regexp\PYGZhy{}in\PYGZhy{}string} \PYG{l+s}{\PYGZdq{}\PYGZsq{}\PYGZdq{}} \PYG{l+s}{\PYGZdq{}\PYGZsq{}\PYGZbs{}\PYGZdq{}\PYGZsq{}\PYGZbs{}\PYGZdq{}\PYGZsq{}\PYGZdq{}} \PYG{p}{(}\PYG{n+nv}{json\PYGZhy{}encode} \PYG{n+nv}{document}\PYG{p}{)))}
	 \PYG{c+c1}{;; it seems utf\PYGZhy{}8 characters may cause issues. Let\PYGZsq{}s just remove them.}
	 \PYG{p}{(}\PYG{n+nv}{json} \PYG{p}{(}\PYG{n+nv}{replace\PYGZhy{}regexp\PYGZhy{}in\PYGZhy{}string} \PYG{l+s}{\PYGZdq{}[\PYGZca{}[:ascii:]]\PYGZdq{}} \PYG{l+s}{\PYGZdq{}\PYGZdq{}} \PYG{n+nv}{json}\PYG{p}{))}
	 \PYG{p}{(}\PYG{n+nv}{cmd} \PYG{p}{(}\PYG{n+nb}{format} \PYG{l+s}{\PYGZdq{}mongo \PYGZpc{}s \PYGZhy{}\PYGZhy{}quiet \PYGZhy{}\PYGZhy{}eval \PYGZsq{}db.\PYGZpc{}s.insert(\PYGZpc{}s)\PYGZsq{}\PYGZdq{}}
		      \PYG{n+nv}{db} \PYG{n+nv}{collection}
		      \PYG{n+nv}{json}\PYG{p}{))}
	 \PYG{p}{(}\PYG{n+nv}{output} \PYG{p}{(}\PYG{n+nv}{shell\PYGZhy{}command\PYGZhy{}to\PYGZhy{}string} \PYG{n+nv}{cmd}\PYG{p}{)))}
    \PYG{p}{(}\PYG{n+nb}{cond}
     \PYG{p}{((}\PYG{n+nv}{string\PYGZhy{}match} \PYG{l+s}{\PYGZdq{}BulkWriteResult(\PYGZdq{}} \PYG{n+nv}{output}\PYG{p}{)}
      \PYG{p}{(}\PYG{n+nv}{json\PYGZhy{}read\PYGZhy{}from\PYGZhy{}string} \PYG{p}{(}\PYG{n+nv}{substring} \PYG{n+nv}{output} \PYG{l+m+mi}{16} \PYG{l+m+mi}{\PYGZhy{}2}\PYG{p}{)))}
     \PYG{p}{((}\PYG{n+nv}{string\PYGZhy{}match} \PYG{l+s}{\PYGZdq{}WriteResult(\PYGZdq{}} \PYG{n+nv}{output}\PYG{p}{)}
      \PYG{p}{(}\PYG{n+nv}{json\PYGZhy{}read\PYGZhy{}from\PYGZhy{}string} \PYG{p}{(}\PYG{n+nv}{substring} \PYG{n+nv}{output} \PYG{l+m+mi}{12} \PYG{l+m+mi}{\PYGZhy{}2}\PYG{p}{)))}
     \PYG{p}{(}\PYG{n+no}{t}
      \PYG{n+nv}{output}\PYG{p}{))))}
\end{Verbatim}
