* Visualizing confidence intervals of predictions from regression models

#+BEGIN_SRC python
import numpy as np

x = np.array([35.3, 29.7, 30.8, 58.8, 61.4, 71.3, 74.4, 76.7, 70.7, 57.5, 46.4, 28.9, 28.1, 39.1, 46.8, 48.5, 59.3, 70.0, 70.0, 74.5, 72.1,58.1, 44.6,33.4, 28.6])

y = np.array([10.98, 11.13, 12.51, 8.40, 9.27, 8.73, 6.36, 8.50, 7.82, 9.14, 8.24, 12.19, 11.88,9.57, 10.94, 9.58, 10.09, 8.11, 6.83, 8.88, 7.68, 8.47, 8.86, 10.36, 11.08])

X = np.column_stack([x**0, x])

b = np.dot(np.dot(np.linalg.inv(np.dot(X.T, X)), X.T), y)

print b

errors =  y - np.dot(X, b)
sigma2 = np.sum(errors**2) / (len(y) - 2)  # RMSE


X0 = np.linspace(0,100)

Y0 = np.dot(np.column_stack([X0**0, X0]), b)

V = 0.5*(1.0 + 1.0/len(y) + ((X0 - np.mean(x))**2) / np.sum((x - np.mean(x))**2))

import matplotlib.pyplot as plt
#plt.plot(x, y, 'k. ', label='data')
plt.plot(X0, Y0, 'b-', label='fit')
plt.plot(X0, Y0 + V**0.5, 'b--', label='fit')
plt.plot(X0, Y0 - V**0.5, 'b--', label='fit')
plt.show()

#+END_SRC

#+RESULTS:
: [ 13.62298927  -0.07982869]

