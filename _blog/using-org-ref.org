* DONE Using org-ref for citations and references
  CLOSED: [2014-05-13 Tue 11:25]
  :PROPERTIES:
  :categories: org-mode,emacs
  :date:     2014/05/13 11:25:24
  :updated:  2014/11/15 15:12:50
  :END:

[[https://github.com/jkitchin/jmax/blob/master/org/org-ref.org][org-ref]] is an emacs-lisp module to handle bibliographic citations, and references to figures, tables and sections in org-mode. It was written first for use in org-mode, and for reasonable export to LaTeX. It does not work well for any other export (eg HTML) for now. The goal of org-ref is to make it easy to add citations, and that the citations be useful, clickable links. Below, I illustrate some of those features. 

** Installation
You can get the source here: https://github.com/jkitchin/jmax/blob/master/org-ref.org. This is an org-mode file, and you can load it with

#+BEGIN_SRC emacs-lisp
(org-babel-load-file "org-ref.org")
#+END_SRC

That should be all you need for basic usage.

** Basic usage for citations
org-ref was written with bibtex in mind. We will discuss customization to use biblatex later.

The first thing you should do is add a [[bibliography]] link to your document. This link is usually put at the end of the document, where you want the bibliography to be printed in a LaTeX export. Use the filename of the bibliography with its extension in the link, and you can use multiple files if they are separated by commas. The bibliography link is clickable, and it will open the bibliography that you clicked on. Depending on the LaTeX class you are exporting to, you may also need to set a bibliographystyle.

Out of the box, org-ref binds the key "C-c ]" to insert a citation. That key runs the command org-ref-insert-cite-link, which will prompt you for a regular expression to search your bibliographies for. The search is done using reftex, so you can mark several entries at once, and they will be added as a citation link. The actual kind of link used is dependent on the value of org-ref-default-citation-link, which defaults to cite. 

If your cursor is on a citation link, or at the end of the link, you can run the command again to append new citations to the link. The new entries are separated by commas. The links are clickable, and when you click on them you will see a message in the minibuffer with the citation, and options to open the entry, open a pdf (if you have it), open the url (if the entry has one), or to open notes about the entry. You get this menu for the entry that you clicked on. 

If you want a different type of citation, type C-u C-c ]. You will be prompted for a format, and you can choose a different type of link format. Most bibtex formats are supported, and some biblatex formats are supported.


** Basic usage for references
The other use of org-ref is for references to labels in your document. You can put labels in figure and table captions, and then reference them in your document. The label link is clickable, and when you click on it there will be a message in the minibuffer telling you how many labels of that name were found (it should be one).

#+caption: An uninteresting table. label:tab-boring
| 0 | 3 |
| 4 | 7 | 

You can then refer to Table ref:tab-boring. The ref links are also clickable, and they take you to the spot where the label is defined. You can enter ref links with completion. Press C-c C-l, type ref, press enter, and then press tab. You will get a list of the labels defined in the buffer you can choose from. There are many things you can make a ref to including a tblname, a label link, an explicit \label{}, and an org-mode #+label: line. [[ref:tab-boring]]

There is an eqref link that is used for equations. You must use LaTeX labels in the equation for this.

\[e^x = 4 \label{eq-exp} \]

You can see in eqref:eq-exp the problem to solve.

** Miscellaneous links

There are two link types for generating a LateX list of tables and list of figures. These links are clickable, and they open a temporary buffer with a list of the tables or figures that you can click on. They export to \listoftables and \listoffigures

list-of-tables:lot

list-of-figures:lof

You can run these as commands, elisp:org-ref-list-of-tables and elisp:org-ref-list-of-figures if you do not want a list of those things in your exported document.
  
** Customization
*** Default bibliography, pdf directory, 
This is an optional configuration, but it is handy to define a default bibliography so that you can add citations to an org-file without defining a bibliography link. I store all pdfs of bibtex entries in the directory defined by org-ref-pdf-directory, and by the name of the bibtex entry label. This enables org-ref to open the pdf if it can find it. The notes file is optional, I create org-entries for each bibtex entry, which I have experimented with various ways of organizing them with tags, and in topical headings.

#+BEGIN_SRC emacs-lisp
(setq org-ref-bibliography-notes "~/Dropbox/bibliography/notes.org"
      org-ref-default-bibliography '("~/Dropbox/bibliography/references.bib")
      org-ref-pdf-directory "~/Dropbox/bibliography/bibtex-pdfs/")
#+END_SRC

*** New key binding 
The default key binding to insert a citation is C-c ]. I chose that because I do not like pressing shift to get ). However, this key binding usurps an org-mode agenda file command. To change this, set this variable

#+BEGIN_SRC emacs-lisp
(setq org-ref-insert-cite-key "C-c )")
#+END_SRC

- You may have to restart emacs to get C-c ] back.

*** Default link type
If you use another citation type alot, you may change the default link type. For example, you may prefer autocite links by default. Just set it like this:

#+BEGIN_SRC emacs-lisp
(setq org-ref-default-citation-link "autocite")
#+END_SRC

*** New citation types
There are so many citation types between bibtex and biblatex. I did not try to add them all. You can add new citation links yourself in your init file. Here, we add a new cite link called citez, and assign a reftex menu key of z to it. This function automatically adds the new link to org-mode, with the citation menu functionality, creates the completion function, and adds the citation to the list of known types.

#+BEGIN_SRC emacs-lisp
(org-ref-define-citation-link "citez" ?z)
#+END_SRC

(org-ref-define-citation-link "citeauthorfull" ?F)  citeauthorfull:hautier-2012-accur

 textcite:hautier-2012-accur


It is assumed that this will be exported as \citez[optional stuff]{label}. If you need more flexibility than that, you will have to define everything manually.

For example, the original cite link was defined like this.

#+BEGIN_SRC emacs-lisp 
(defun org-ref-cite-link-format (keyword desc format)
   (cond
    ((eq format 'html) (format "(<cite>%s</cite>)" path))
    ((eq format 'latex)
     (concat "\\cite" (when desc (format "[%s]" desc)) "{"
	     (mapconcat (lambda (key) key) (org-ref-split-and-strip-string keyword) ",")
	     "}"))))

(org-add-link-type
 "cite"
 'org-ref-cite-onclick-minibuffer-menu ;; clicking function
 'org-ref-cite-link-format) ;; formatting function
#+END_SRC

You should also add your new citation type to the list of org-ref-cite-types.


** Summary
This covers most of the basic org-ref functionality. There are also several utility functions for interacting with org-buffers and bibtex files that will be described later.

See http://screencast.com/t/bxfafVydE for a screencast of using org-ref.


# <<bibliography>>
bibliography:bib.bib

* DONE Using org-ref to keep your bibtex files in order
  CLOSED: [2014-05-15 Thu 10:59]
  :PROPERTIES:
  :categories: emacs,bibtex
  :date:     2014/05/15 10:59:19
  :updated:  2014/05/15 12:19:49
  :END:

Maintaining an accurate, useful bibliography of references is critical for scientific writing. It is also not trivial. While it is easy to download and copy bibliographic entries to your database, these entries are often incomplete, not consistently formatted, and can contain invalid characters. org-ref provides several utility functions to help with this.

** "cleaning" a bibtex entry

Consider this bibtex entry from http://pubs.acs.org/action/showCitFormats?doi=10.1021%2Fie500588j.

#+BEGIN_SRC bibtex

@article{doi:10.1021/ie500588j,
author = {Okada, Tomohiko and Ozono, Shoya and Okamoto, Masami and Takeda, Yohei and Minamisawa, Hikari M. and Haeiwa, Tetsuji and Sakai, Toshio and Mishima, Shozi},
title = {Magnetic Rattle-Type Coreâ€“Shell Particles Containing Iron Compounds with Acid Tolerance by Dense Silica},
journal = {Industrial & Engineering Chemistry Research},
volume = {0},
number = {0},
pages = {null},
year = {0},
doi = {10.1021/ie500588j},

URL = {http://pubs.acs.org/doi/abs/10.1021/ie500588j},
eprint = {http://pubs.acs.org/doi/pdf/10.1021/ie500588j}
}

#+END_SRC

On the surface it looks fine, but there are the following issues with it:

1. The bibtex key is hard to remember. I like systematically named keys.
2. There is a bare & in the journal title, which is not legal in LaTeX.
3. There is no year entry, even though it is a 2014 entry. The pages, volume, and number are also problematic, but this is an ASAP article and the reference does not have those yet.
4. It is hard to see, but the dash between core and shell is a non-ascii character, which can cause problems in LaTeX.
5. The entry is not very nicely aligned or indented.

You can fix these problems by putting your cursor on the bibtex entry, and typing M-x org-ref-clean-bibtex-entry. This will fix the bibtex key to a standard form, align and indent the entry, escape the & so it is legal syntax, prompt you for a year, and show you the non-ascii characters so you can replace them. The resulting, nicely formatted entry is shown below.

#+BEGIN_SRC bibtex
@article{okada-2014-magnet-rattl,
  author =	 {Okada, Tomohiko and Ozono, Shoya and Okamoto, Masami
                  and Takeda, Yohei and Minamisawa, Hikari M. and
                  Haeiwa, Tetsuji and Sakai, Toshio and Mishima,
                  Shozi},
  title =	 {Magnetic Rattle-Type Core-Shell Particles Containing
                  Iron Compounds with Acid Tolerance by Dense Silica},
  journal =	 {Industrial \& Engineering Chemistry Research},
  volume =	 0,
  pages =	 {null},
  year =	 2014,
  doi =		 {10.1021/ie500588j},
  number =	 0,
  url =		 {http://pubs.acs.org/doi/abs/10.1021/ie500588j},
  eprint =	 {http://pubs.acs.org/doi/pdf/10.1021/ie500588j},
}


#+END_SRC

The key formatting comes from these definitions:

#+BEGIN_SRC emacs-lisp
;; variables that control bibtex key format for auto-generation
;; I want firstauthor-year-title-words
;; this usually makes a legitimate filename to store pdfs under.
(setq bibtex-autokey-year-length 4
      bibtex-autokey-name-year-separator "-"
      bibtex-autokey-year-title-separator "-"
      bibtex-autokey-titleword-separator "-"
      bibtex-autokey-titlewords 2
      bibtex-autokey-titlewords-stretch 1
      bibtex-autokey-titleword-length 5)
#+END_SRC

You should develop a discipline to clean each entry as you add them, and before you cite them. It is a pain to change the key, and then find and change all the places you used that key before. Now that you have a systematic key, go ahead and download the pdf for the article, and save it in your pdf directory by that key name. Set the variable org-ref-pdf-directory to this directory, and later when you click on citations you will be able to open the pdf easily.

** Validating your bibliography
elisp:bibtex-validate will check your bibliography for valid syntax. This is a bibtex command.

file:org-bib.bib

** Sorting your bibtex file
It is a good idea to keep your bibtex file sorted. This will facilitate finding duplicate entries, and will make it easier to find things. I usually add entries to the top of the file, and then clean them. Then run the command elisp:bibtex-sort-buffer. This will sort the entries for you. This is also a bibtex command.

file:org-bib.bib

** Make a full bibliography pdf
A good way to check your bibliography for duplicates, spelling errors, and invalid formats is to make a pdf containing all the entries. Open your bibtex file, and run elisp:org-ref-build-full-bibliography. If all goes well, you will get a pdf of your bibliography that you can check for accuracy. If there are errors, you will have to fix them until the pdf is generated.

Try it out: file:org-bib.bib

** Finding bad citation links
Sometimes you will get bad citation links in your document. Maybe there is no corresponding entry, maybe you typed in the wrong key, maybe you changed the key. Either way, you need to find them and fix them. Run the command elisp:org-ref-find-bad-citations to find them. cite:test

** Extracting citations entries
You will often work from your default bibliography for your own work. Eventually you will need to extract the entries cited so you can send them to someone. The command  elisp:org-ref-extract-bibtex-entries will do that for you. If I have cited something cite:calle-vallejo-2010-trend-stabil.

** Summary
You can see a screen cast of this post here: http://screencast.com/t/yZCOdO6kJ

** References

**  Bibtex entries

#+BEGIN_SRC: text :tangle extract-bib7108tYg.bib
@article{calle-vallejo-2010-trend-stabil,
  author =	 {Calle-Vallejo, F. and Martinez, J. I. and Garcia-
                  Lastra, J. M. and Mogensen, M. and Rossmeisl, J.},
  title =	 {Trends in Stability of Perovskite Oxides},
  journal =	 "Angewandte Chemie-International Edition",
  volume =	 49,
  number =	 42,
  pages =	 {7699-7701},
  year =	 2010,
  doi =		 {10.1002/anie.201002301},
  keyword =	 {density functional calculations heats of formation
                  perovskites thermochemistry transition-metals
                  catalysts ferroelectricity},
}
#+END_SRC



